/*
Copyright IBM Corp. 2016 All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

		 http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

option go_package = "github.com/hyperledger/fabric/orderer/sbft/simplebft";

package simplebft;

message Config {
        uint64 n = 1;
        uint64 f = 2;
        uint64 batch_duration_nsec = 3;
        uint64 batch_size_bytes = 4;
        uint64 request_timeout_nsec = 5;
};

message MultiChainMsg {
    string chainID = 1;
    Msg msg = 2;
}

message Msg {
        oneof type {
                Request request = 1;
                Preprepare preprepare = 2;
                Subject prepare = 3;
                Subject commit = 4;
                Signed view_change = 5;
                NewView new_view = 6;
                Checkpoint checkpoint = 7;
                Hello hello = 8;
        };
};

message Request {
        bytes payload = 1;
};

message SeqView {
        uint64 view = 1;
        uint64 seq = 2;
};

message BatchHeader {
        uint64 seq = 1;
        bytes prev_hash = 2;
        bytes data_hash = 3;
};

message Batch {
        bytes header = 1;
        repeated bytes payloads = 2;
        map<uint64, bytes> signatures = 3;
};

message Preprepare {
        SeqView seq = 1;
        Batch batch = 2;
};

message Subject {
        SeqView seq = 1;
        bytes digest = 2;
};

message ViewChange {
        uint64 view = 1;
        repeated Subject pset = 2;
        repeated Subject qset = 3;
        Batch checkpoint = 4;
};

message Signed {
        bytes data = 1;
        bytes signature = 2;
};

message NewView {
        uint64 view = 1;
        map<uint64, Signed> vset = 2;
        Subject xset = 3;
        Batch batch = 4;
};

message Checkpoint {
        uint64 seq = 1;
        bytes digest = 2;
        bytes signature = 3;
};

message Hello {
        Batch batch = 1;
        NewView new_view = 2;
};
